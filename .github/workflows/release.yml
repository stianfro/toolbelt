name: Release

on:
  release:
    types: [published]
  workflow_run:
    workflows: ["release-please"]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Determine release tag
        id: get_tag
        if: github.event_name == 'workflow_run'
        run: echo "tag=$(gh release view --json tagName -q .tagName)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build binaries
        run: |
          mkdir -p dist
          GOOS=linux GOARCH=amd64 go build -o dist/toolbelt-linux-amd64
          GOOS=linux GOARCH=arm64 go build -o dist/toolbelt-linux-arm64
          GOOS=darwin GOARCH=amd64 go build -o dist/toolbelt-darwin-amd64
          GOOS=darwin GOARCH=arm64 go build -o dist/toolbelt-darwin-arm64
          tar -C dist -czf toolbelt-linux-amd64.tar.gz toolbelt-linux-amd64
          tar -C dist -czf toolbelt-linux-arm64.tar.gz toolbelt-linux-arm64
          tar -C dist -czf toolbelt-darwin-amd64.tar.gz toolbelt-darwin-amd64
          tar -C dist -czf toolbelt-darwin-arm64.tar.gz toolbelt-darwin-arm64
          GOOS=windows GOARCH=amd64 go build -o dist/toolbelt-windows-amd64.exe
          zip -j toolbelt-windows-amd64.zip dist/toolbelt-windows-amd64.exe
      - name: Upload release assets
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ github.event.release.tag_name || steps.get_tag.outputs.tag }}
        run: |
          gh release upload "$TAG_NAME" \
            toolbelt-linux-amd64.tar.gz \
            toolbelt-linux-arm64.tar.gz \
            toolbelt-darwin-amd64.tar.gz \
            toolbelt-darwin-arm64.tar.gz \
            toolbelt-windows-amd64.zip \
            --clobber
